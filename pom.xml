<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.6.11</version>
    </parent>

    <groupId>kim.sesame.framework</groupId>
    <artifactId>sesame-parent</artifactId>
    <version>2.6.11</version><!-- sesame.version -->
    <packaging>pom</packaging>
    <name>sesame-parent-${project.version}</name>
    <description></description>

    <properties>
        <sesame.version>2.6.11</sesame.version>
        <spring-boot.version>2.6.6</spring-boot.version>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <jdk.version>1.8</jdk.version>
        <!--
        <thymeleaf.version>3.0.9.RELEASE</thymeleaf.version>
        <thymeleaf-layout-dialect.version>2.3.0</thymeleaf-layout-dialect.version>
        -->
        <easyexcel.version>3.0.5</easyexcel.version>
        <fastjson.version>1.2.79</fastjson.version>
        <jwt.version>3.18.3</jwt.version>

        <!--docker config -->
        <docker.image.name>testimagename</docker.image.name>
        <docker.image.tag>latest</docker.image.tag>
    </properties>

    <!-- 项目集合-->
    <modules>

        <module>cache-redis-spring-boot-starter</module>
        <module>cache-local-caffeine-spring-boot-starter</module>
        <module>email-spring-boot-starter</module>

        <module>framework-define</module>
        <module>framework-core</module>
        <module>framework-cache</module>
        <module>framework-utils-parent</module>

        <module>lock-spring-boot-starter</module>
        <module>mybatis-plus-spring-boot-starter</module>
        <module>serial-spring-boot-starter</module>
        <module>web-spring-boot-starter</module>

        <module>spring-cloud-common-feign</module>
        <module>spring-cloud-common-sleuth</module>
        <module>spring-cloud-common-sleuth-zipkin</module>

        <!--        <module>websocket-spring-boot-starter</module>-->
        <!--        <module>websocket-cloud-spring-boot-starter</module>-->

    </modules>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>2021.0.5</version>
                <type>pom</type>
                <scope>import</scope>
                <!-- 官网版本查看 https://spring.io/projects/spring-cloud#overview -->
                <!-- 版本列表 https://github.com/spring-cloud/spring-cloud-release/wiki/Spring-Cloud-2021.0-Release-Notes -->
            </dependency>
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>2021.0.4.0</version>
                <type>pom</type>
                <scope>import</scope>
                <!-- https://github.com/alibaba/spring-cloud-alibaba/wiki/%E7%89%88%E6%9C%AC%E8%AF%B4%E6%98%8E -->
            </dependency>

            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
                <version>2021.1</version>
                <!-- https://mvnrepository.com/artifact/com.alibaba.cloud/spring-cloud-starter-alibaba-nacos-discovery -->
            </dependency>
<!--            <dependency>-->
<!--                <groupId>com.alibaba.cloud</groupId>-->
<!--                <artifactId>aliyun-spring-boot-dependencies</artifactId>-->
<!--                <version>${aliyun-project-version}</version>-->
<!--                <type>pom</type>-->
<!--                <scope>import</scope>-->
<!--            </dependency>-->


            <dependency>
                <groupId>kim.sesame.framework</groupId>
                <artifactId>framework-define</artifactId>
                <version>${sesame.version}</version>
            </dependency>
            <dependency>
                <groupId>kim.sesame.framework</groupId>
                <artifactId>framework-core</artifactId>
                <version>${sesame.version}</version>
            </dependency>
            <dependency>
                <groupId>kim.sesame.framework</groupId>
                <artifactId>framework-cache</artifactId>
                <version>${sesame.version}</version>
            </dependency>
            <dependency>
                <groupId>kim.sesame.framework</groupId>
                <artifactId>web-spring-boot-starter</artifactId>
                <version>${sesame.version}</version>
            </dependency>
            <dependency>
                <groupId>kim.sesame.framework</groupId>
                <artifactId>mybatis-plus-spring-boot-starter</artifactId>
                <version>${sesame.version}</version>
            </dependency>

            <dependency>
                <groupId>kim.sesame.framework</groupId>
                <artifactId>cache-redis-spring-boot-starter</artifactId>
                <version>${sesame.version}</version>
            </dependency>
            <dependency>
                <groupId>kim.sesame.framework</groupId>
                <artifactId>cache-local-caffeine-spring-boot-starter</artifactId>
                <version>${sesame.version}</version>
            </dependency>

            <dependency>
                <groupId>kim.sesame.framework</groupId>
                <artifactId>email-spring-boot-starter</artifactId>
                <version>${sesame.version}</version>
            </dependency>

<!--            <dependency>-->
<!--                <groupId>kim.sesame.framework</groupId>-->
<!--                <artifactId>websocket-spring-boot-starter</artifactId>-->
<!--                <version>${sesame.version}</version>-->
<!--            </dependency>-->
<!--            <dependency>-->
<!--                <groupId>kim.sesame.framework</groupId>-->
<!--                <artifactId>websocket-cloud-spring-boot-starter</artifactId>-->
<!--                <version>${sesame.version}</version>-->
<!--            </dependency>-->

            <dependency>
                <groupId>kim.sesame.framework</groupId>
                <artifactId>lock-spring-boot-starter</artifactId>
                <version>${sesame.version}</version>
            </dependency>
            <dependency>
                <groupId>kim.sesame.framework</groupId>
                <artifactId>serial-spring-boot-starter</artifactId>
                <version>${sesame.version}</version>
            </dependency>

            <dependency>
                <groupId>kim.sesame.framework</groupId>
                <artifactId>framework-utils-parent</artifactId>
                <version>${sesame.version}</version>
            </dependency>
            <dependency>
                <groupId>kim.sesame.framework</groupId>
                <artifactId>framework-utils-ssh</artifactId>
                <version>${sesame.version}</version>
            </dependency>
            <dependency>
                <groupId>kim.sesame.framework</groupId>
                <artifactId>framework-utils-swagger</artifactId>
                <version>${sesame.version}</version>
            </dependency>
            <dependency>
                <groupId>kim.sesame.framework</groupId>
                <artifactId>framework-utils-upload</artifactId>
                <version>${sesame.version}</version>
            </dependency>

            <dependency>
                <groupId>kim.sesame.framework</groupId>
                <artifactId>spring-cloud-common-feign</artifactId>
                <version>${sesame.version}</version>
            </dependency>
            <dependency>
                <groupId>kim.sesame.framework</groupId>
                <artifactId>spring-cloud-common-sleuth</artifactId>
                <version>${sesame.version}</version>
            </dependency>
            <dependency>
                <groupId>kim.sesame.framework</groupId>
                <artifactId>spring-cloud-common-sleuth-zipkin</artifactId>
                <version>${sesame.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <!--jdk 版本 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
                </configuration>
            </plugin>
            <!-- 处理资源文件的编码 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <nonFilteredFileExtensions>
                        <nonFilteredFileExtension>woff</nonFilteredFileExtension>
                        <nonFilteredFileExtension>woff2</nonFilteredFileExtension>
                        <nonFilteredFileExtension>eot</nonFilteredFileExtension>
                        <nonFilteredFileExtension>ttf</nonFilteredFileExtension>
                        <nonFilteredFileExtension>svg</nonFilteredFileExtension>
                    </nonFilteredFileExtensions>
                </configuration>
            </plugin>
            <!--源码打包-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.2.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--docker 构建-->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.4.12</version>
                <configuration>
                    <imageName>${docker.image.name}</imageName>
                    <dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                    <imageTags>
                        <imageTag>${docker.image.tag}</imageTag>
                    </imageTags>
                </configuration>
            </plugin>

        </plugins>

        <!--插件定义,被继承-->
        <pluginManagement>
            <plugins>
                <!--
                <plugin>
                    <groupId>kim.sesame</groupId>
                    <artifactId>reload-resources-file</artifactId>
                    <version>1.0</version>
                    <configuration>
                        <srcFiles>
                            <srcFile>${project.basedir}/src/main/resources/public</srcFile>
                            <srcFile>${project.basedir}/src/main/resources/static</srcFile>
                            <srcFile>${project.basedir}/src/main/resources/templates</srcFile>
                        </srcFiles>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>reloadResourcesFile</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>kim.sesame</groupId>
                    <artifactId>zip</artifactId>
                    <version>1.0</version>
                    <configuration>
                        <paths>
                            <path>${project.basedir}/target/classes/com/sesame/theme</path>
                        </paths>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>zip</goal>
                            </goals>
                            <phase>compile</phase>
                        </execution>
                    </executions>
                </plugin>
                    -->
            </plugins>
        </pluginManagement>

        <!-- 开启资源过滤
        <resources>
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
                <includes>
                    <include>**/spring.factories</include>
                </includes>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>${project.basedir}/src/main/java</directory>
                <filtering>false</filtering>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                    <include>**/*.js</include>
                    <include>**/*.json</include>
                </includes>
            </resource>
        </resources>
         -->
    </build>

</project>